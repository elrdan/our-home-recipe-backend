plugins {
    id 'java'   // Java 플러그인을 적용하여 Java 애플리케이션 빌드 및 테스트 기능을 제공
    id 'org.springframework.boot' version '3.3.2' // Spring Boot 플러그인을 적용하여 Spring Boot 애플리케이션을 설정하고 실행할 수 있도록 도와준다.
    id 'io.spring.dependency-management' version '1.1.6' // 종속성 관리를 위해 사용되며, 종속성 버전을 중앙에서 관리할 수 있도록 해준다.
    id 'com.epages.restdocs-api-spec' version '0.18.2' // REST Docs로 만든 텍스트를 기반으로 OpenAPI 스펙을 자동 생성하게 해준다.
    id "org.asciidoctor.jvm.convert" version "3.3.2" // REST Docs가 생성한 AsciiDoc파일을 HTML로 변환해준다.
}

allprojects {
    sourceCompatibility = '17'
    targetCompatibility = '17'

    // 라이브러리들을 받아올 원격 저장소들을 설정함
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.ourhomerecipe.backend'
    version = '0.0.1-SNAPSHOT'

    dependencies {
        // Spring Boot 기본 스타터
        implementation "org.springframework.boot:spring-boot-starter-data-jpa"
        implementation "org.springframework.boot:spring-boot-starter-web"

        implementation "org.springframework.boot:spring-boot-starter-test"

        // Lombok
        implementation "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"

        testImplementation "org.mockito:mockito-core:5.2.0" // Mocking framework
        testImplementation "org.assertj:assertj-core:3.23.1" // Assertions library
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // REST Docs 문서화
        testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2' // REST Docs로 작성된 테스트를 OpenAPI(Swagger) 규격의 API 명세로 변환
    }

    // Gradle에서 전역적으로 사용될 수 있는 추가 속성, 테스트 이후 생성되는 snippets가 저장될 경로를 지정
    ext {
        snippetsDir = file('build/generated-snippets')
    }

    // REST Docs로 문서를 만드는 태스크
    asciidoctor { 
        dependsOn test // asciidoctor 작업이 실행되기 전에 test 작업이 먼저 실행되도록 설정
        attributes 'snippets': snippetsDir // 기존에 설정한 디렉토리를 참조하도록 설정
        inputs.dir snippetsDir // 내부의 파일이 변경되었을 때 문서를 다시 생성
    }

    asciidoctor.doFirst {
        delete file('src/main/resources/static/docs') // 기존 문서 삭제로 문서 중복 방지
    }

    // Spring Boot 애플리케이션에서 실행가능한 JAR 파일로 패키징하는 태스크
    bootJar {
        dependsOn asciidoctor
        copy {
            from "${asciidoctor.outputDir}"
            into 'src/main/resources/static/docs'
        }
    }

    // OpenAPI 생성
    openapi3 {
        servers = [
                { url = 'http://localhost:8081/v1' }, // 8081 포트에서 사용
                // { url = 'http://production-api-server-url.com/v1' } // 배포 이후 실제 도메인 주소
        ]
        title = 'Our Home Recipe API' // Swagger UI에 표시되는 타이틀
        description = 'Our Home Recipe' // Swagger UI에 표시되는 설명, MD 형식으로 여러 기능 설명 추가
        version = '1.0.0'
        format = 'json'
        outputFileNamePrefix = 'open-api-3-labeling-service'
        outputDirectory = 'src/main/resources/static/docs'
    }

    test {
        outputs.dir snippetsDir // 테스트 실행 시 문서화된 스티펫을 해당 디렉토리에 저장
        useJUnitPlatform()
    }
}